{"version":3,"sources":["webpack:///./docs/pages/plugins.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","target","id","aria-hidden","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23"],"mappings":"4JAEM,MAAAA,EAAAC,EAAAC,EAAA,IACAC,ySAAAC,CAAAF,EAAA,IACAD,EAAAC,EAAA,IAgGFD,EAAAC,EAAA,iqCA3FF,MAOMG,EAAOC,IACX,IAAIC,GAACA,GAAeD,EAARE,EAAZC,EAAoBH,EAApB,QAEA,OAAIC,EAAGG,SAAS,QACPP,EAAAQ,QAAAC,cAAA,IAAAC,EAAA,GAAOP,EAAP,CAAcQ,KAAMP,MAGf,MAAVA,EAAG,KACLA,EAAKQ,UAAKC,KAAK,SAAS,sBAAwBT,GAIhDJ,EAAAQ,QAAAC,cAAA,IAAAC,EAAA,GACML,EADN,CAEEM,KAAMP,EACNU,QAASC,IAGP,GAFAA,EAAEC,iBAEe,MAAbb,EAAMC,GACR,OAAO,EAGT,MAAMa,EAAW,IAAIC,IAAIN,UAAKC,KAAKM,OAAOF,SAASG,OAAQhB,IAE3De,OAAOE,QAAQC,UA/BHC,KAAQ,CAC1BZ,KAAMY,EAASZ,KACfa,SAAUD,EAASC,SACnBC,KAAMF,EAASE,KACfC,MAAOH,EAASG,QA2BeC,CAAYV,GAAW,KAAMb,GACtDD,EAAMW,UAEN,MAAMc,EAAgB,IAAIC,YAAY,iBAAkB,CAAEC,OAAQb,IAGlE,OAFAc,cAAcH,IAEP,QAMf1B,EAAK8B,aAAe,CAClBrB,KAAM,GACNG,QAAS,QA6FX,MAAMmB,EAAgBC,IAAQ,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,EAC5B,cAAcE,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,QAKpB,CACNC,KAAM,OAGRC,qBACOF,KAAKG,MAAMF,MAAQD,KAAKxC,MAAM4C,YACjCb,IAAWc,KAAKC,IACdN,KAAKO,SAAS,CACZN,KAAMK,EAAEzC,YAMhB2C,SACE,MAAMP,KAAEA,GAASD,KAAKG,MACtB,OAAOF,EAAOP,UAAM5B,cAAcmC,EAAMD,KAAKxC,MAAOwC,KAAKxC,MAAMiD,UAAY,MAAQ,OAtB3DV,EAAAP,EAAA,eAEJ,CACpBY,YAAY,IAHYX,GA2BbH,EAAc,IAAMlC,EAAAgB,EAAA,IAAAiC,KAAAjD,EAAAsD,KAAA,YACdpB,EAAc,IAAMlC,EAAAgB,EAAA,IAAAiC,KAAAjD,EAAAsD,KAAA,kBAMnCC,EAAA,4BACPA,EAAA,2BAIHA,EAAA,wDAA0CA,EAAA,4BAA1C,uBAAkFA,EAAA,yBAAlF,iDAEsBA,EAAA,0BAA6HA,EAAA,0BACFA,EAAA,8BAGjJA,EAAA,wGAA0FA,EAAA,4BAA1F,6CACAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,MAAsCD,EAAA,SAAtC,KAA8CA,EAAA,QAAMC,UAAU,kBAAhB,eAA9C,OAA8FD,EAAA,SAA9F,IAA0GA,EAAA,aAC/GA,EAAA,0DAEAA,EAAA,oFACAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,MAAsCD,EAAA,SAAtC,KAA8CA,EAAA,QAAMC,UAAU,kBAAhB,eAA9C,MAA6FD,EAAA,QAAMC,UAAU,oBAAhB,WAA7F,IAAwID,EAAA,SAAxI,IAAoJA,EAAA,aAC9HA,EAAA,0BAC3BA,EAAA,kFAAoEA,EAAA,4CAApE,UAA+GA,EAAA,gCAA/G,iCACAA,EAAA,gFACAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,MAAsCD,EAAA,SAAtC,KAA8CA,EAAA,QAAMC,UAAU,kBAAhB,eAA9C,MAA6FD,EAAA,QAAMC,UAAU,oBAAhB,kCAA7F,KAAgKD,EAAA,QAAMC,UAAU,oBAAhB,oBAAhK,IAAoND,EAAA,SAApN,IAAgOA,EAAA,aAErOA,EAAA,oEACAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,MAAsCD,EAAA,SAAtC,KAA8CA,EAAA,QAAMC,UAAU,kBAAhB,eAA9C,MAA6FD,EAAA,QAAMC,UAAU,oBAAhB,4BAA7F,IAAyJD,EAAA,SAAzJ,IAAqKA,EAAA,aAE1KA,EAAA,2EACAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,MAAsCD,EAAA,SAAtC,KAA8CA,EAAA,QAAMC,UAAU,kBAAhB,eAA9C,MAA6FD,EAAA,QAAMC,UAAU,oBAAhB,cAA7F,IAA2ID,EAAA,SAA3I,IAAuJA,EAAA,aAC5JA,EAAA,4BACAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,MAAsCD,EAAA,SAAtC,KAA8CA,EAAA,QAAMC,UAAU,kBAAhB,eAA9C,MAA6FD,EAAA,SAA7F,QAAwGA,EAAA,QAAMC,UAAU,oBAAhB,cAAxG,OAA8JD,EAAA,QAAMC,UAAU,kBAAhB,mBAA9J,KAAgND,EAAA,QAAMC,UAAU,oBAAhB,YAAhN,KAA6PD,EAAA,QAAMC,UAAU,kBAAhB,aAA7P,KAAySD,EAAA,QAAMC,UAAU,oBAAhB,iCAAzS,MAAiXD,EAAA,SAAjX,MAA0XA,EAAA,SAA1X,IAAsYA,EAAA,iBA/BlXnD,GACnBmD,EAAA,OAAKC,UAAWpD,EAAMoD,gBAAtB,EACED,EAAA,oBAAAE,EAERF,EAAA,cAAAG,EAAA,qBAAsCH,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaC,OAAO,SAASvD,GAAG,qCAAqCmD,UAAU,sBAAhI,aAAtC,+BACAD,EAAA,MAAIM,GAAG,sBAAP,mBAAqCN,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,iBAAiByD,cAAY,UACzKP,EAAA,2FAA6EA,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAatD,GAAG,wCAAjE,aAA7E,iDACAkD,EAAA,MAAIM,GAAG,iBAAP,cAA2BN,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,YAAYyD,cAAY,UALlJC,EAORR,EAAA,eACAA,EAAA,oCAAAS,EAAA,YAAkDT,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAatD,GAAG,sCAAjE,EAAA4D,IAClDV,EAAA,uDAA4CA,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAatD,GAAG,0CAAjE,EAAA6D,KAE5CX,EAAA,MAAIM,GAAG,mBAAP,gBAA+BN,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,cAAcyD,cAAY,UAXxJK,EAAAC,EAAAC,EAeRd,EAAA,MAAIM,GAAG,4BAAP,yBAAiDN,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,uBAAuByD,cAAY,UAfnLQ,EAAAC,EAkBRhB,EAAA,MAAIM,GAAG,uBAAP,QAAAW,EAAA,YAAoDjB,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,kBAAkByD,cAAY,UAlBjLW,EAAAC,EAAAC,EAsBRpB,EAAA,MAAIM,GAAG,gBAAP,aAAyBN,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,WAAWyD,cAAY,UAtB/Ic,EAAAC,EAyBRtB,EAAA,MAAIM,GAAG,6BAAP,0BAAmDN,EAACpD,EAAD,CAAMwD,YAAoCvD,EAAOuD,YAAaH,UAAU,4BAA4BnD,GAAG,wBAAwByD,cAAY,UAzBtLgB,EAAAC,EAAAC,EAAAC","file":"plugins.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/plugins.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Plugins</h1>\n<p><code>auto</code> uses the package <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/webpack/tapable\" className=\"external-link\">tapable</Link> to expose a plugin system.</p>\n<h2 id=\"using-plugins\">Using Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#using-plugins\" aria-hidden=\"true\"></Link></h2>\n<p>To use a plugin you can either supply the plugin via a CLI arg or in your <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/autorc.html#plugins\">.autorc</Link>. Specifying a plugin overrides the defaults.</p>\n<h3 id=\"defaults\">Defaults <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#defaults\" aria-hidden=\"true\"></Link></h3>\n<p>If you don't configure plugins in your <code>.autorc</code> configuration file <code>auto</code> will use a default package manager plugin.</p>\n<ul>\n<li>Installed through <code>npm</code> =&gt; uses <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/npm/README.html\"><code>npm</code></Link></li>\n<li>Installed through executable =&gt; uses <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/plugins/git-tag/README.html\"><code>git-tag</code></Link></li>\n</ul>\n<h3 id=\"no-plugins\">No Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#no-plugins\" aria-hidden=\"true\"></Link></h3>\n<p>If you don't want to include the default plugins, you can supply an empty array in the <code>.autorc</code> configuration file like the following:</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: []<br />&#125;<br /></code></pre>\n<p>There are three ways to load a plugin.</p>\n<h3 id=\"1.-official-plugins\">1. Official Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#1.-official-plugins\" aria-hidden=\"true\"></Link></h3>\n<p>To use an official plugin all you have to do is supply the name.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"npm\"</span>]<br />&#125;<br /></code></pre>\n<h3 id=\"2.-npm-package\">2. <code>npm</code> package <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#2.-npm-package\" aria-hidden=\"true\"></Link></h3>\n<p>Unofficial plugins pulled from NPM should be named in the format <code>auto-plugin-PLUGIN_NAME</code> where <code>PLUGIN_NAME</code> is the name of the plugin.</p>\n<p>That name is provided to auto to use that particular plugin.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"auto-plugin-my-cool-plugin\"</span>, <span className=\"hljs-string\">\"some-package\"</span>]<br />&#125;<br /></code></pre>\n<h3 id=\"3.-path\">3. Path <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#3.-path\" aria-hidden=\"true\"></Link></h3>\n<p>Or if you have a plugin locally supply the path.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"../path/to/plugin.js\"</span>]<br />&#125;<br /></code></pre>\n<h3 id=\"plugin-configuration\">Plugin Configuration <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#plugin-configuration\" aria-hidden=\"true\"></Link></h3>\n<p>To provide plugin specific config change the following:</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"chrome\"</span>]<br />&#125;<br /></code></pre>\n<p>To this:</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<span className=\"hljs-string\">\"chrome\"</span>, &#123; <span className=\"hljs-attr\">\"extensionId\"</span>: <span className=\"hljs-string\">\"1234\"</span>, <span className=\"hljs-attr\">\"build\"</span>: <span className=\"hljs-string\">\"my-compiled-extension.zip\"</span> &#125;]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}