{"version":3,"sources":["webpack:///./docs/pages/autorc.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","currentPage","target","_ref5","_ref6","_ref7","id","aria-hidden","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","_ref47","_ref48","_ref49","_ref50","_ref51","_ref52","_ref53","_ref54","_ref55","_ref56","_ref57","_ref58","_ref59","_ref60"],"mappings":"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","file":"autorc.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/autorc.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1><code>auto</code> RC File</h1>\n<p>All options for the CLI tools can also be configured via the <code>.autorc</code>. As CLI options you supply them in snake-case (<code>--foo-bar</code>), but as <code>.autorc</code> options you supply them in camelCase (<code>fooBar</code>),</p>\n<p>We use <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/davidtheclark/cosmiconfig\" className=\"external-link\">cosmiconfig</Link> to find your config. This means you can define this file a variety of ways. Our <code>cosmiconfig</code> setup is a little custom and will start at the root of your project and start to search up the directory tree for the following:</p>\n<ul>\n<li>a JSON or YAML, extension-less &quot;rc file&quot;</li>\n<li>an &quot;rc file&quot; with the extensions <code>.json</code>, <code>.yaml</code>, or <code>.yml</code></li>\n<li>a package.json property</li>\n</ul>\n<p>We do not support writing configuration files in JavaScript.</p>\n<h2 id=\"initialization\">Initialization <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#initialization\" aria-hidden=\"true\"></Link></h2>\n<p>To interactively create an <code>.autorc</code> use the <code>init</code> command. You can configure most flags and all labels/changelogTitles.</p>\n<pre><code className=\"language-sh\">auto init<br /></code></pre>\n<h2 id=\"exclusive\">Exclusive <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#exclusive\" aria-hidden=\"true\"></Link></h2>\n<p>These options can be set exclusively in the <code>.autorc</code> and do not exist as CLI flags.</p>\n<h3 id=\"extending\">Extending <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#extending\" aria-hidden=\"true\"></Link></h3>\n<p>If you want to share your auto configuration between projects you can use the <code>extends</code> property. This property will load from a module's package.json or from a custom path. It's expected that the extended configuration be under the <code>auto</code> key in the package.json file.</p>\n<p>Auto can load <code>extends</code> configs in the following ways:</p>\n<ul>\n<li>from a path <code>./path/to/config</code> (this file must be in JSON format)</li>\n<li>from a scoped package <code>@YOUR_SCOPE/auto-config</code> (under the <code>auto</code> key in the package.json)</li>\n<li>from a package <code>auto-config-YOUR_NAME</code></li>\n<li>from a url <code>https://yourdomain.com/auto-config.json</code> (must return the content type <code>application/json</code>)</li>\n</ul>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"extends\"</span>: <span className=\"hljs-string\">\"@YOUR_SCOPE\"</span><br />&#125;<br /></code></pre>\n<p>Will use the package <code>@YOUR_SCOPE/auto-config</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"extends\"</span>: <span className=\"hljs-string\">\"joe\"</span><br />&#125;<br /></code></pre>\n<p>Will use the package <code>auto-config-joe</code></p>\n\n        <article className=\"message column is-warning\">\n          \n          <div className=\"message-body\">\n      <p>If extending from a config package make sure it's a dependency of your project</p>\n\n        </div>\n      </article>\n    <p>If you're extending from a local file it can be any file in JSON format or a <code>package.json</code> file.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"extends\"</span>: <span className=\"hljs-string\">\"./path/to/config.json\"</span><br />&#125;<br /></code></pre>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"extends\"</span>: <span className=\"hljs-string\">\"./path/to/other/package.json\"</span><br />&#125;<br /></code></pre>\n<h3 id=\"labels\">Labels <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#labels\" aria-hidden=\"true\"></Link></h3>\n<p>To override any of the default labels use the <code>labels</code> section in the <code>.autorc</code>.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"labels\"</span>: &#123;<br />    <span className=\"hljs-attr\">\"major\"</span>: <span className=\"hljs-string\">\"Version: Major\"</span>,<br />    <span className=\"hljs-attr\">\"minor\"</span>: <span className=\"hljs-string\">\"Version: Minor\"</span>,<br />    <span className=\"hljs-attr\">\"patch\"</span>: <span className=\"hljs-string\">\"Version: Patch\"</span>,<br />    <span className=\"hljs-attr\">\"skip-release\"</span>: <span className=\"hljs-string\">\"NO!\"</span>,<br />    <span className=\"hljs-attr\">\"release\"</span>: <span className=\"hljs-string\">\"Autobots, rollout!\"</span>,<br />    <span className=\"hljs-attr\">\"prerelease\"</span>: <span className=\"hljs-string\">\"beta\"</span><br />  &#125;<br />&#125;<br /></code></pre>\n<h4 id=\"label-customization\">Label Customization <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#label-customization\" aria-hidden=\"true\"></Link></h4>\n<p>You can customize everything about a label</p>\n<ul>\n<li><code>name</code> - The label text used for the label. If omitted defaults to the <code>key</code> value</li>\n<li><code>title</code> - The title to use in the changelog</li>\n<li><code>description</code> - The description to use when creating the label</li>\n<li><code>color</code> - The color of the label. Can be specified as a string in any of <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/bgrins/TinyColor#accepted-string-input\" className=\"external-link\">these</Link> ways. If not specified the color is random</li>\n</ul>\n<pre><code className=\"language-json\">&#123;<br />  \"labels\": &#123;<br />    \"major\": &#123;<br />      \"name\": \"Version: Major\",<br />      \"title\": \"The API has changed:\",<br />      \"description\": \"Add this label to a PR to create a major release\",<br />      \"color\": \"blue\"<br />    &#125;,<br />    ...<br />  &#125;<br />&#125;<br /></code></pre>\n<h4 id=\"multiple-labels\">Multiple Labels <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#multiple-labels\" aria-hidden=\"true\"></Link></h4>\n<p>You have can multiple labels for each of the default labels.</p>\n<pre><code className=\"language-json\">&#123;<br />  \"labels\": &#123;<br />    \"major\": [<br />      &#123;<br />        \"name\": \"BREAKING\",<br />        \"title\": \"SUPER BREAKING CHANGED\",<br />      &#125;,<br />      &#123;<br />        \"name\": \"Version: Major\",<br />        \"title\": \"The API has changed:\",<br />        \"description\": \"Add this label to a PR to create a major release\",<br />      &#125;<br />    ],<br />    ...<br />  &#125;<br />&#125;<br /></code></pre>\n\n        <article className=\"message column is-warning\">\n          \n          <div className=\"message-body\">\n      <p>⚠️ If you override any of the semantic versioning labels the default values are overridden too! Make sure to include that label if you still want it to be used during version calculation.</p>\n\n        </div>\n      </article>\n    <pre><code className=\"language-json\">&#123;<br />  \"labels\": &#123;<br />    \"minor\": [<br />      \"minor\",<br />      &#123;<br />        \"name\": \"New Component\",<br />        \"title\": \"🧩 New Component\",<br />        \"description\": \"A new component has been added to the design-system\",<br />      &#125;<br />    ],<br />    ...<br />  &#125;<br />&#125;<br /></code></pre>\n<h4 id=\"changelog-titles\">Changelog Titles <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#changelog-titles\" aria-hidden=\"true\"></Link></h4>\n<p>By default auto will create sections in the changelog for the following labels.</p>\n<ul>\n<li>major</li>\n<li>minor</li>\n<li>patch</li>\n<li>internal</li>\n<li>documentation</li>\n</ul>\n<p>To customize the title for the section in the changelog you can</p>\n<pre><code className=\"language-json\">&#123;<br />  \"labels\": &#123;<br />    \"documentation\": &#123;<br />      \"title\": \"Docz\"<br />    &#125;,<br />    ...<br />  &#125;<br />&#125;<br /></code></pre>\n<p>If you want more sections in your changelog to further detail the change-set you can\nuse the <code>labels</code> section to add more. Any label in the label section with a title\nwill become a special section in your changelog.</p>\n<p>The following adds a <code>typescript</code> label to the project that we can use to denote changes\nrelated to a TypeScript re-write.</p>\n<pre><code className=\"language-json\">&#123;<br />  \"labels\": &#123;<br />    \"typescript\": &#123;<br />      \"title\": \"TypeScript Rewrite\"<br />    &#125;,<br />    ...<br />  &#125;<br />&#125;<br /></code></pre>\n<h4 id=\"multiple-skip-release\">Multiple <code>skip-release</code> <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#multiple-skip-release\" aria-hidden=\"true\"></Link></h4>\n<p>You can configure multiple labels to skip releases.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"skipReleaseLabels\"</span>: [<span className=\"hljs-string\">\"documentation\"</span>, <span className=\"hljs-string\">\"project-files\"</span>]<br />&#125;<br /></code></pre>\n<h4 id=\"arbitrary-labels\">Arbitrary Labels <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#arbitrary-labels\" aria-hidden=\"true\"></Link></h4>\n<p>If you want to <code>auto create-labels</code> to add other labels to your project (ones that aren't used for\nversioning or the changelog), you can use the <code>labels</code> section. Just omit the <code>title</code> property.</p>\n<pre><code className=\"language-json\">&#123;<br />  \"labels\": &#123;<br />    \"good first issue\": &#123;<br />      \"description\": \"This is an issue that first time contributors can tackle easily\",<br />      \"color\": \"purple\"<br />    &#125;,<br />    ...<br />  &#125;<br />&#125;<br /></code></pre>\n<h2 id=\"cli-args\">CLI args <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#cli-args\" aria-hidden=\"true\"></Link></h2>\n<p>You can set any CLI option in the <code>.autorc</code> these options will get overridden by the CLI flags.</p>\n<p>The following are options that might be more useful to set in the <code>.autorc</code> rather than with a flag.</p>\n<h3 id=\"base-branch\">Base Branch <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#base-branch\" aria-hidden=\"true\"></Link></h3>\n<p>Configure what your repo considers the &quot;master&quot; branch.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"baseBranch\"</span>: <span className=\"hljs-string\">\"trunk\"</span><br />&#125;<br /></code></pre>\n<h3 id=\"plugins\">Plugins <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#plugins\" aria-hidden=\"true\"></Link></h3>\n<p>It is useful to specify your plugins in the rc file rather than in all the commands.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"npm\"</span>, <span className=\"hljs-string\">\"../path/to/plugin.js\"</span>, <span className=\"hljs-string\">\"NPM_PACKAGE_NAME\"</span>]<br />&#125;<br /></code></pre>\n<h3 id=\"githubapi\">githubApi <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#githubapi\" aria-hidden=\"true\"></Link></h3>\n<p>If you are using enterprise github, <code>auto</code> lets you configure the github API URL that it uses.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"githubApi\"</span>: <span className=\"hljs-string\">\"https://github.mine.com/api/v3\"</span><br />&#125;<br /></code></pre>\n<h3 id=\"githubgraphqlapi\">githubGraphqlApi <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#githubgraphqlapi\" aria-hidden=\"true\"></Link></h3>\n<p>This is used for doing some searches in <code>auto</code>.</p>\n<p>If you are using enterprise github and your company hosts the graphql at some other URL than the <code>githubApi</code>, you can use <code>githubGraphqlApi</code> to set the base path for <code>auto</code>. The <code>githubGraphqlApi</code> get merged with <code>/graphql</code> to build the final URL.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"githubGraphqlApi\"</span>: <span className=\"hljs-string\">\"https://github.mine.com/api/\"</span><br />&#125;<br /></code></pre>\n<h3 id=\"name\">name <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#name\" aria-hidden=\"true\"></Link></h3>\n<p>Git name to commit and release with. Used in <code>auto changelog</code> and <code>auto release</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"name\"</span>: <span className=\"hljs-string\">\"Joe Schmo\"</span><br />&#125;<br /></code></pre>\n<h3 id=\"email\">email <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#email\" aria-hidden=\"true\"></Link></h3>\n<p>Git email to commit and release with. Used in <code>auto changelog</code> and <code>auto release</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"email\"</span>: <span className=\"hljs-string\">\"joe@schmo.com\"</span><br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}