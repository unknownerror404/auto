{"version":3,"sources":["webpack:///./plugins/upload-assets/README.md","webpack:///./plugins/chrome/README.md","webpack:///./plugins/crates/README.md","webpack:///./plugins/git-tag/README.md","webpack:///./plugins/npm/README.md","webpack:///./plugins/maven/README.md","webpack:///./plugins/all-contributors/README.md","webpack:///./plugins/s3/README.md","webpack:///./plugins/conventional-commits/README.md","webpack:///./plugins/first-time-contributor/README.md","webpack:///./plugins/jira/README.md","webpack:///./plugins/omit-commits/README.md","webpack:///./plugins/omit-release-notes/README.md","webpack:///./plugins/released/README.md","webpack:///./plugins/slack/README.md","webpack:///./plugins/twitter/README.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","id","currentPage","aria-hidden","_ref5","_ref6","_ref7","_ref8","target","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20"],"mappings":"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","file":"README.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/upload-assets/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Upload Assets Plugin</h1>\n<p>Upload assets to the release. Good for executables and extra downloadable files.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/upload-assets<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/upload-assets<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Simply supply the paths to the assets to add to the release.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<span className=\"hljs-string\">\"upload-assets\"</span>, &#123; <span className=\"hljs-attr\">\"assets\"</span>: [<span className=\"hljs-string\">\"./path/to/file\"</span>] &#125;],<br />    // or<br />    [<span className=\"hljs-string\">\"upload-assets\"</span>, [<span className=\"hljs-string\">\"./path/to/file\"</span>]]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/chrome/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Chrome Web Store</h1>\n<p>This plugin allows you to automate the publishing of chrome extensions</p>\n\n        <article className=\"message column is-success\">\n          \n          <div className=\"message-body\">\n      <p>Example Repo: <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/hipstersmoothie/auto-chrome\" className=\"external-link\">here</Link></p>\n\n        </div>\n      </article>\n    <h2 id=\"prerequisites\">Prerequisites <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#prerequisites\" aria-hidden=\"true\"></Link></h2>\n<p>To publish to the chrome web store you will need the following secrets set in your environment. See <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/DrewML/chrome-webstore-upload/blob/master/How%20to%20generate%20Google%20API%20keys.md\" className=\"external-link\">here</Link> for a guide one how to get these values.</p>\n<ul>\n<li><code>CLIENT_ID</code></li>\n<li><code>CLIENT_SECRET</code></li>\n<li><code>REFRESH_TOKEN</code></li>\n</ul>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/chrome<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/chrome<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>You must first pack/zip your plugin before running <code>auto</code>.</p>\n<p>These environment variables tell <code>auto</code> what to publish.</p>\n<ul>\n<li>EXTENSION_ID - your chrome extensions unique ID (REQUIRED)</li>\n<li>EXTENSION_BUILD - Path to either a zip file, or a directory to be zip. defaults to <code>extension.zip</code></li>\n</ul>\n<p>Or you can set these values in the autorc:</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"chrome\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"id\"</span>: <span className=\"hljs-string\">\"1234\"</span>,<br />        <span className=\"hljs-attr\">\"build\"</span>: <span className=\"hljs-string\">\"path/to/zip/or/folder\"</span>,<br />        <span className=\"hljs-attr\">\"manifest\"</span>: <span className=\"hljs-string\">\"path/tp/manifest.json\"</span><br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n\n        <article className=\"message column is-warning\">\n          \n          <div className=\"message-body\">\n      <p>⚠️ You must have a manifest.json for this plugin to work.</p>\n\n        </div>\n      </article>\n    \n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/crates/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Crates Plugin</h1>\n<p>Deploy Rust crates to <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://crates.io/\" className=\"external-link\">crates.io</Link>.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/crates<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/crates<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"crates\"</span>]<br />&#125;<br /></code></pre>\n<h2 id=\"crates-project-configuration\">Crates Project Configuration <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#crates-project-configuration\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin handles incrementing the crate version, but it requires that your crate be ready for publishing. You can view <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://doc.rust-lang.org/cargo/reference/publishing.html\" className=\"external-link\">the publishing reference</Link> for more information on that process.</p>\n<p>When ran on a machine with <code>~/cargo/credentials</code>, that file will automatically be used by Cargo. For machines that do not have this file (like CI builds), the <code>CARGO_REGISTRY_TOKEN</code> environment variable is expected for Cargo's publish command as per the <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://doc.rust-lang.org/cargo/commands/cargo-publish.html#cargo_publish_options\" className=\"external-link\">publish options</Link>.</p>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/git-tag/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Git Tag Plugin</h1>\n<p>Manage your projects version through just a git tag. This plugin is loaded by default when <code>auto</code> is installed through the binaries released on GitHub.</p>\n<p>If you're using this plugin you aren't releasing your code to any platform (npm, maven, etc). Instead you version calculations is done entirely though git tags.</p>\n<p>This plugin only:</p>\n<ol>\n<li>gets last git tag</li>\n<li>bump it to new version</li>\n<li>create new tags</li>\n<li>push to github</li>\n</ol>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/git-tag<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/git-tag<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Simply add the plugins to your auto configuration.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"git-tag\"</span>]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/npm/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>NPM Plugin</h1>\n<p>Publish to NPM. Works in both a monorepo setting and for a single package. This plugin is loaded by default when <code>auto</code> is installed through <code>npm</code>. If you configure <code>auto</code> to use any other plugin this will be lost. So you must add the <code>npm</code> plugin to your plugins array if you still want NPM functionality.</p>\n<h2 id=\"prerequisites\">Prerequisites <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#prerequisites\" aria-hidden=\"true\"></Link></h2>\n<p>To publish to npm you will need an <code>NPM_TOKEN</code> set in your environment.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is included with the <code>auto</code> CLI so you do not have to install it. To install if you are using the <code>auto</code> API directly:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/npm<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/npm<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    <span className=\"hljs-string\">\"npm\"</span>,<br />    // or with options<br />    [<span className=\"hljs-string\">\"npm\"</span>, &#123; <span className=\"hljs-attr\">\"forcePublish\"</span>: <span className=\"hljs-literal\">false</span> &#125;]<br />    // other plugins<br />  ]<br />&#125;<br /></code></pre>\n<h2 id=\"monorepo-usage\">Monorepo Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#monorepo-usage\" aria-hidden=\"true\"></Link></h2>\n<p>The <code>npm</code> plugin works out of the box with <code>lerna</code> in both <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/lerna/lerna#independent-mode\" className=\"external-link\"><code>independent</code></Link> and <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://github.com/lerna/lerna#fixedlocked-mode-default\" className=\"external-link\"><code>fixed</code></Link> mode. <code>auto</code> works on a repo basis and should be run from the root of the repo, not on each sub-package. No additional setup is required.</p>\n<h2 id=\"options\">Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#options\" aria-hidden=\"true\"></Link></h2>\n<h3 id=\"setrctoken\">setRcToken <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#setrctoken\" aria-hidden=\"true\"></Link></h3>\n<p>When running the <code>shipit</code> command auto will try to set your <code>.npmrc</code> token while publishing. To disable this feature you must set the <code>setRcToken</code> to false.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"npm\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"setRcToken\"</span>: <span className=\"hljs-literal\">false</span><br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"forcepublish\">forcePublish <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#forcepublish\" aria-hidden=\"true\"></Link></h3>\n<p>By default <code>auto</code> will force publish all packages for monorepos. To disable this behavior you must set the <code>setRcToken</code> to false.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"npm\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"forcePublish\"</span>: <span className=\"hljs-literal\">false</span><br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"subpackagechangelogs\">subPackageChangelogs <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#subpackagechangelogs\" aria-hidden=\"true\"></Link></h3>\n<p><code>auto</code> will create a changelog for each sub-package in a monorepo.\nYou can disable this behavior by using the <code>subPackageChangelogs</code> option.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"npm\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"subPackageChangelogs\"</span>: <span className=\"hljs-literal\">false</span><br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/maven/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Maven Plugin</h1>\n<p>Release a Java project to a <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://maven.apache.org/\" className=\"external-link\">maven</Link> instance.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/maven<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/maven<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"maven\"</span>]<br />&#125;<br /></code></pre>\n<h2 id=\"maven-project-configuration\">Maven Project Configuration <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#maven-project-configuration\" aria-hidden=\"true\"></Link></h2>\n<p>Your project must be using the maven release plugin. Make sure the the latest <code>maven-release-plugin</code> is in your <code>pom.xml</code>.</p>\n<pre><code className=\"language-xml\"><span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">plugin</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">groupId</span>&gt;</span>org.apache.maven.plugins<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">groupId</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">artifactId</span>&gt;</span>maven-release-plugin<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">artifactId</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">version</span>&gt;</span>2.5.3<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">version</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">configuration</span>&gt;</span><br />    <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">preparationGoals</span>&gt;</span>initialize<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">preparationGoals</span>&gt;</span><br />    <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">goals</span>&gt;</span>deploy<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">goals</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">configuration</span>&gt;</span><br /><span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">plugin</span><br /></span></code></pre>\n<p>You will also need all of the following configuration blocks for all parts of <code>auto</code> to function:</p>\n<ol>\n<li>\n<p>Author</p>\n<pre><code className=\"language-xml\"><span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">developers</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">developer</span>&gt;</span><br />    <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">name</span>&gt;</span>Andrew Lisowski<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">name</span>&gt;</span><br />    <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">email</span>&gt;</span>test@email.com<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">email</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">developer</span>&gt;</span><br /><span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">developers</span>&gt;</span><br /></code></pre>\n</li>\n<li>\n<p>SCM</p>\n<pre><code className=\"language-xml\"><span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">scm</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">connection</span>&gt;</span>scm:git:https://github.com/Fuego-Tools/java-test-project.git<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">connection</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">url</span>&gt;</span>https://github.com/Fuego-Tools/java-test-project<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">url</span>&gt;</span><br />  <span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">tag</span>&gt;</span>HEAD<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">tag</span>&gt;</span><br /><span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">scm</span>&gt;</span><br /></code></pre>\n</li>\n<li>\n<p>Version</p>\n<pre><code className=\"language-xml\"><span className=\"hljs-tag\">&lt;<span className=\"hljs-name\">version</span>&gt;</span>1.0.0-SNAPSHOT<span className=\"hljs-tag\">&lt;/<span className=\"hljs-name\">version</span>&gt;</span><br /></code></pre>\n</li>\n</ol>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/all-contributors/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>All Contributors Plugin</h1>\n<p>Automatically add contributors as changelogs are produced.</p>\n<p>This plugin maps one of the <Link currentPage={(this && this.props || props).currentPage} to=\"vhttps://allcontributors.org/docs/en/emoji-key\" className=\"external-link\">contribution type</Link> to a glob or array of globs.\nOut of the box the plugin will only detect the following contribution types:</p>\n<ul>\n<li>📖 <code>doc</code> - Edits to any README, \\`['<strong>/*.mdx', '</strong>/<em>.md', '<strong>/docs/</strong>/</em>', '<strong>/documentation/</strong>/*']\\`\\`</li>\n<li>💡 <code>example</code> - Edits to <code>['**/*.stories*', '**/*.story.*']</code></li>\n<li>🚇 <code>infra</code> - Edits to <code>['**/.circle/**/*', '**/.github/**/*', '**/travis.yml'],</code></li>\n<li>⚠️ <code>test</code> - Edits to <code>['**/*.test.*']</code></li>\n<li>💻 <code>code</code> - Edits to <code>['**/src/**/*', '**/lib/**/*', '**/package.json', '**/tsconfig.json']</code></li>\n</ul>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npx install-peerdeps --dev @auto-it/all-contributors<br /></code></pre>\n<h2 id=\"prerequisites\">Prerequisites <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#prerequisites\" aria-hidden=\"true\"></Link></h2>\n<p>You must have already installed and initialized <code>all-contributors-cli</code>;</p>\n<pre><code className=\"language-sh\">npx all-contributors init<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"all-contributors\"</span>]<br />&#125;<br /></code></pre>\n<h3 id=\"configure-contribution-type-matching\">Configure Contribution Type Matching <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#configure-contribution-type-matching\" aria-hidden=\"true\"></Link></h3>\n<p>You use any of the <Link currentPage={(this && this.props || props).currentPage} to=\"vhttps://allcontributors.org/docs/en/emoji-key\" className=\"external-link\">contribution type</Link>.\nIf you configure an pre-configured contribution type the arrays are not merged, it is overridden.</p>\n<p><strong><code>auto.rc</code></strong></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"all-contributors\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"types\"</span>: &#123;<br />          <span className=\"hljs-attr\">\"plugin\"</span>: <span className=\"hljs-string\">\"**/plugin/**/*\"</span>,<br />          <span className=\"hljs-attr\">\"example\"</span>: [<span className=\"hljs-string\">\"**/*.stories.*\"</span>, <span className=\"hljs-string\">\"**/*.examples.*\"</span>, <span className=\"hljs-string\">\"**/*.snippet.*\"</span>]<br />        &#125;<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"exclude-users\">Exclude Users <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#exclude-users\" aria-hidden=\"true\"></Link></h3>\n<p>Useful for excluding bots from getting into your contributors.</p>\n<p><strong><code>auto.rc</code></strong></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"all-contributors\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"exclude\"</span>: [<span className=\"hljs-string\">\"dependabot\"</span>, <span className=\"hljs-string\">\"ci-services\"</span>]<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/s3/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>S3 Plugin</h1>\n<p>Post your built artifacts to s3.</p>\n<h2 id=\"prerequisites\">Prerequisites <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#prerequisites\" aria-hidden=\"true\"></Link></h2>\n<p>Must have the <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://docs.aws.amazon.com/cli/index.html\" className=\"external-link\">aws-cli</Link> on your machine and all of the following environment variables set:</p>\n<ul>\n<li><code>AWS_ACCESS_KEY</code></li>\n<li><code>AWS_SECRET_KEY</code></li>\n<li><code>AWS_SESSION_TOKEN</code></li>\n</ul>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/s3<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/s3<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Publish a single asset to s3.</p>\n<p><code>bucket</code>: Bucket to deploy to\n<code>region</code>: Region to deploy to\n<code>files</code>: An array of tuples mapping local build files to remote deploy paths.</p>\n<pre><code className=\"language-txt\">EX:<br /><br />given: &#96;[[\"components/button/dist\", \"components/button\"]]&#96;<br /><br />=> Deploy the files in \"components/button/dist\" to s3://bucket/components/button on &#96;region&#96;<br /></code></pre>\n<p><strong>Full</strong>:</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"s3\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"bucket\"</span>: <span className=\"hljs-string\">\"BUCKET_NAME\"</span>,<br />        <span className=\"hljs-attr\">\"region\"</span>: <span className=\"hljs-string\">\"REGION_NAME\"</span>,<br />        <span className=\"hljs-attr\">\"files\"</span>: [[<span className=\"hljs-string\">\"components/button/dist\"</span>, <span className=\"hljs-string\">\"components/button\"</span>]]<br />      &#125;<br />    ]<br />    // other plugins<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"versioning-deploys\">Versioning Deploys <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#versioning-deploys\" aria-hidden=\"true\"></Link></h3>\n<p>To version your deployed assets simply add <code>$VERSION</code> in the <code>remote</code> path. This will be replaced with the new version being released.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"s3\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"bucket\"</span>: <span className=\"hljs-string\">\"BUCKET_NAME\"</span>,<br />        <span className=\"hljs-attr\">\"region\"</span>: <span className=\"hljs-string\">\"REGION_NAME\"</span>,<br />        <span className=\"hljs-attr\">\"files\"</span>: [[<span className=\"hljs-string\">\"components/button/dist\"</span>, <span className=\"hljs-string\">\"$VERSION/components/button\"</span>]]<br />      &#125;<br />    ]<br />    // other plugins<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"multiple-files\">Multiple Files <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#multiple-files\" aria-hidden=\"true\"></Link></h3>\n<p>Publish multiple assets to s3.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"s3\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"bucket\"</span>: <span className=\"hljs-string\">\"BUCKET_NAME\"</span>,<br />        <span className=\"hljs-attr\">\"region\"</span>: <span className=\"hljs-string\">\"REGION_NAME\"</span>,<br />        <span className=\"hljs-attr\">\"files\"</span>: [<br />          [<span className=\"hljs-string\">\"components/button/dist\"</span>, <span className=\"hljs-string\">\"components/button\"</span>],<br />          [<span className=\"hljs-string\">\"components/card/dist\"</span>, <span className=\"hljs-string\">\"components/card\"</span>],<br />          [<span className=\"hljs-string\">\"components/select/dist\"</span>, <span className=\"hljs-string\">\"components/select\"</span>]<br />        ]<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"multiple-buckets\">Multiple Buckets <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#multiple-buckets\" aria-hidden=\"true\"></Link></h3>\n<p>Publish assets to multiple s3 buckets.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<br />      <span className=\"hljs-string\">\"s3\"</span>,<br />      [<br />        &#123;<br />          <span className=\"hljs-attr\">\"bucket\"</span>: <span className=\"hljs-string\">\"BUCKET_NAME\"</span>,<br />          <span className=\"hljs-attr\">\"region\"</span>: <span className=\"hljs-string\">\"REGION_NAME\"</span>,<br />          <span className=\"hljs-attr\">\"files\"</span>: [[<span className=\"hljs-string\">\"components/button/dist\"</span>, <span className=\"hljs-string\">\"components/button\"</span>]]<br />        &#125;,<br />        &#123;<br />          <span className=\"hljs-attr\">\"bucket\"</span>: <span className=\"hljs-string\">\"ANOTHER_BUCKET_NAME\"</span>,<br />          <span className=\"hljs-attr\">\"region\"</span>: <span className=\"hljs-string\">\"REGION_NAME\"</span>,<br />          <span className=\"hljs-attr\">\"files\"</span>: [[<span className=\"hljs-string\">\"components/card/dist\"</span>, <span className=\"hljs-string\">\"components/card\"</span>]]<br />        &#125;<br />      ]<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"overwrite\">Overwrite <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#overwrite\" aria-hidden=\"true\"></Link></h3>\n<p>By default this plugin will overwrite any bucket path you give it. To prevent it from overwriting your bucket path if it already exists set <code>overwrite</code> to false</p>\n<pre><code className=\"language-json\">&#123;<br />  \"plugins\": [<br />    [<br />      \"s3\",<br />      &#123;<br />        \"bucket\": \"BUCKET_NAME\",<br />        \"region\": \"REGION_NAME\",<br />        \"overwrite\": false,<br />        ...<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/conventional-commits/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Conventional Commits Plugin</h1>\n<p>Parse <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://www.conventionalcommits.org/en/v1.0.0-beta.4/\" className=\"external-link\">conventional commit messages</Link> and use them to calculate the version. This plugin will omit the PR HEAD if it isn't labeled and has a commit with a conventional-commit commit message.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/conventional-commits<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/conventional-commits<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    <span className=\"hljs-string\">\"conventional-commits\"</span><br />    // other plugins<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/first-time-contributor/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>First Time Contributor Plugin</h1>\n<p>Thank first time contributors for their work right in your release notes.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/first-time-contributor<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/first-time-contributor<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Simply add the plugins to your auto configuration.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"first-time-contributor\"</span>]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/jira/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Jira Plugin</h1>\n<p>To include Jira story information in your changelogs you must include a URL to your hosted JIRA instance.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/jira<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/jira<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>To use the plugin include it in your <code>.autorc</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<span className=\"hljs-string\">\"jira\"</span>, &#123; <span className=\"hljs-attr\">\"url\"</span>: <span className=\"hljs-string\">\"https://url-to-your-jira.com\"</span> &#125;],<br />    // or<br />    [<span className=\"hljs-string\">\"jira\"</span>, <span className=\"hljs-string\">\"https://url-to-your-jira.com\"</span>]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/omit-commits/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Omit Commits Plugin</h1>\n<p>Filter certain commits out of the changelog and version calculation.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/omit-commits<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/omit-commits<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Yarn can omit by most any field available on a commit. Each options accepts either a string or an array of strings.</p>\n<pre><code className=\"language-json\">&#123;<br />  \"plugins\": [<br />    [<br />      \"omit-commits\",<br />      &#123;<br />        // By usernames<br />        \"username\": [\"pdbf\", \"ghost\"],<br />        // By name<br />        \"name\": \"Adam\",<br />        // By emails<br />        \"email\": [\"foo@gmail.com\", \"doesnt-exits@yahoo.com\"],<br />        // By presence of string in subject<br />        \"subject\": [\"WIP\", \"SPIKE\"],<br />        // By labels<br />        \"labels\": \"grunt-work\"<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/omit-release-notes/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Omit Release Notes Plugin</h1>\n<p>Filter PRs with release notes that shouldn't make it into a release. By default <code>auto</code> will not include and <code>Release Notes</code> from <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://renovatebot.com/\" className=\"external-link\">renovate</Link> PRs. This plugin allows you to omit more PRs from effecting you releases.</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/omit-release-notes<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/omit-release-notes<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Yarn can omit by most any field available on a PR. Each options accepts either a string or an array of strings.</p>\n<pre><code className=\"language-json\">&#123;<br />  \"plugins\": [<br />    [<br />      \"omit-release-notes\",<br />      &#123;<br />        // By usernames<br />        \"username\": [\"pdbf\", \"ghost\"],<br />        // By name<br />        \"name\": \"Adam\",<br />        // By emails<br />        \"email\": [\"foo@gmail.com\", \"doesnt-exits@yahoo.com\"],<br />        // By labels<br />        \"labels\": \"grunt-work\"<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/released/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Released Plugin</h1>\n<p>This plugin</p>\n<ul>\n<li>comments on the merged PR with the new version</li>\n<li>comments on closed issues with the new version</li>\n<li>adds a <code>released</code> label to the pull request</li>\n<li>adds a <code>released</code> label to closed issues</li>\n</ul>\n\n        <article className=\"message column is-warning\">\n          \n          <div className=\"message-body\">\n      <p>Make sure that you create the <code>released</code> label on you project</p>\n\n        </div>\n      </article>\n    <h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is included with the <code>auto</code> CLI so you do not have to install it. To install if you are using the <code>auto</code> API directly:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/released<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/released<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>To use the plugin include it in your <code>.autorc</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"npm\"</span>, <span className=\"hljs-string\">\"released\"</span>]<br />&#125;<br /></code></pre>\n<h2 id=\"options\">Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#options\" aria-hidden=\"true\"></Link></h2>\n<h3 id=\"label\">Label <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#label\" aria-hidden=\"true\"></Link></h3>\n<p>Customize the label this plugin attaches to merged pull requests.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    <span className=\"hljs-string\">\"npm\"</span>,<br />    [<br />      <span className=\"hljs-string\">\"released\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"label\"</span>: <span className=\"hljs-string\">\":shipit:\"</span><br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"message\">Message <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#message\" aria-hidden=\"true\"></Link></h3>\n<p>To customize the message this plugin uses on issues and pull requests use the following format.</p>\n<ul>\n<li><code>%TYPE</code> - Either <code>PR</code> or <code>Issue</code></li>\n<li><code>%VERSION</code> - The version that was just published</li>\n</ul>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    <span className=\"hljs-string\">\"npm\"</span>,<br />    [<br />      <span className=\"hljs-string\">\"released\"</span>,<br />      &#123;<br />        <span className=\"hljs-attr\">\"message\"</span>: <span className=\"hljs-string\">\"%TYPE went out with version: %VERSION\"</span><br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"lock-issue\">Lock Issue <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#lock-issue\" aria-hidden=\"true\"></Link></h3>\n<p>Lock issues that have been merged in PRs.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<span className=\"hljs-string\">\"npm\"</span>, [<span className=\"hljs-string\">\"released\"</span>, &#123; <span className=\"hljs-attr\">\"lockIssues\"</span>: <span className=\"hljs-literal\">true</span> &#125;]]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/slack/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Slack Plugin</h1>\n<p>Post your release notes to a slack channel</p>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/slack<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/slack<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>To use the plugin include it in your <code>.autorc</code></p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<span className=\"hljs-string\">\"slack\"</span>, &#123; <span className=\"hljs-attr\">\"url\"</span>: <span className=\"hljs-string\">\"https://url-to-your-slack-hook.com\"</span> &#125;],<br />    // or<br />    [<span className=\"hljs-string\">\"slack\"</span>, <span className=\"hljs-string\">\"https://url-to-your-slack-hook.com\"</span>],<br />    // or<br />    [<br />      <span className=\"hljs-string\">\"slack\"</span>,<br />      &#123; <span className=\"hljs-attr\">\"url\"</span>: <span className=\"hljs-string\">\"https://url-to-your-slack-hook.com\"</span>, <span className=\"hljs-attr\">\"atTarget\"</span>: <span className=\"hljs-string\">\"here\"</span> &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<p>This URL should be to you webhook. If you require a token to post to a slack hook, make sure you have a SLACK_TOKEN variable available on your environment. This token will be added to eh URL as a query string parameter.</p>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    ","\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','../plugins/twitter/README.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Twitter Plugin</h1>\n<p>Post tweets after a release is made.</p>\n<h2 id=\"prerequisites\">Prerequisites <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#prerequisites\" aria-hidden=\"true\"></Link></h2>\n<p>To post tweets to twitter you need the following secrets set in your environment:</p>\n<ul>\n<li><code>TWITTER_ACCESS_TOKEN</code></li>\n<li><code>TWITTER_ACCESS_TOKEN_SECRET</code></li>\n<li><code>TWITTER_CONSUMER_KEY</code></li>\n<li><code>TWITTER_CONSUMER_KEY_SECRET</code></li>\n</ul>\n<h2 id=\"installation\">Installation <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#installation\" aria-hidden=\"true\"></Link></h2>\n<p>This plugin is not included with the <code>auto</code> CLI installed via NPM. To install:</p>\n<pre><code className=\"language-sh\">npm i --save-dev @auto-it/twitter<br /><span className=\"hljs-comment\"># or</span><br />yarn add -D @auto-it/twitter<br /></code></pre>\n<h2 id=\"usage\">Usage <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#usage\" aria-hidden=\"true\"></Link></h2>\n<p>Simply supply the names of the account to filter</p>\n<pre><code className=\"language-json\">&#123;<br />  \"plugins\": [<br />    [<br />      \"twitter\",<br />      &#123;<br />        /* options */<br />      &#125;<br />    ]<br />  ]<br />&#125;<br /></code></pre>\n<h2 id=\"options\">Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#options\" aria-hidden=\"true\"></Link></h2>\n<h3 id=\"message\">Message <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#message\" aria-hidden=\"true\"></Link></h3>\n<p>You can configure the message posted to twitter. The <code>message</code> option should use the following special tokens to create a tweet.</p>\n<ul>\n<li><code>%release</code> - The version bump (major, minor, patch)</li>\n<li><code>%package</code> - The name of the package</li>\n<li><code>%notes</code> - Your release notes truncated to fit in the tweet</li>\n<li><code>%link</code> - A link to your the release on GitHub</li>\n<li><code>%version</code> - The latest version number</li>\n</ul>\n<p>Default:</p>\n<pre><code className=\"language-txt\">A new %release version of %package was released!<br /><br />%notes<br /><br />%link<br /></code></pre>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [<br />    [<span className=\"hljs-string\">\"twitter\"</span>, &#123; <span className=\"hljs-attr\">\"message\"</span>: <span className=\"hljs-string\">\"v%version of %package was released!\\n\\n%link\"</span> &#125;]<br />  ]<br />&#125;<br /></code></pre>\n<h3 id=\"threshold\">Threshold <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#threshold\" aria-hidden=\"true\"></Link></h3>\n<p>By default the <code>twitter</code> plugin will only tweet if the version difference between the latest and the last release is greater than a <code>minor</code>.</p>\n<pre><code className=\"language-json\">&#123;<br />  <span className=\"hljs-attr\">\"plugins\"</span>: [[<span className=\"hljs-string\">\"twitter\"</span>, &#123; <span className=\"hljs-attr\">\"threshold\"</span>: <span className=\"hljs-string\">\"major\"</span> &#125;]]<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}