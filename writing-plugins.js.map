{"version":3,"sources":["webpack:///./docs/pages/writing-plugins.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","_ref6","_ref7","id","currentPage","aria-hidden","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","_ref39","_ref40","_ref41","_ref42","_ref43","_ref44","_ref45","_ref46","_ref47","_ref48","_ref49","_ref50","target","_ref51","_ref52","_ref53","_ref54","_ref55","_ref56","_ref57","_ref58","_ref59","_ref60","_ref61","_ref62","_ref63","_ref64","_ref65","_ref66","_ref67","_ref68","_ref69","_ref70","_ref71","_ref72"],"mappings":"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","file":"writing-plugins.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/writing-plugins.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1>Writing Plugins</h1>\n<p>If you've ever written a webpack plugin it's a lot like that.</p>\n<p>A plugin definition is:</p>\n<ul>\n<li>a class the has an <code>apply</code> function where a plugin hooks into various functions in auto (REQUIRED)</li>\n<li>a constructor where you can load plugin specific config</li>\n</ul>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; Auto, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto'</span>;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> TestPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-keyword\">private</span> readonly config: <span className=\"hljs-built_in\">any</span>;<br /><br />  <span className=\"hljs-keyword\">constructor</span>(<span className=\"hljs-params\">config: <span className=\"hljs-built_in\">any</span></span>) &#123;<br />    <span className=\"hljs-keyword\">this</span>.config = config;<br />  &#125;<br /><br />  apply(auto: Auto) &#123;<br />    <span className=\"hljs-comment\">// hook into auto</span><br />  &#125;<br />&#125;<br /></code></pre>\n<h2 id=\"constructor\">Constructor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#constructor\" aria-hidden=\"true\"></Link></h2>\n<p>In the constructor you have access to any plugin specific config provided in the <code>.autorc</code>. It might be useful to write a more type-safe interface for your config.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> &#123; Auto, IPlugin &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto'</span>;<br /><br /><span className=\"hljs-keyword\">interface</span> ITestPluginConfig &#123;<br />  foo?: <span className=\"hljs-built_in\">string</span>;<br />  bar?: <span className=\"hljs-built_in\">boolean</span>;<br />&#125;<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> TestPlugin <span className=\"hljs-keyword\">implements</span> IPlugin &#123;<br />  <span className=\"hljs-keyword\">private</span> readonly config: ITestPluginConfig;<br /><br />  <span className=\"hljs-keyword\">constructor</span>(<span className=\"hljs-params\">config: ITestPluginConfig</span>) &#123;<br />    <span className=\"hljs-keyword\">this</span>.config = config;<br />  &#125;<br />&#125;<br /></code></pre>\n<h2 id=\"hooks\">Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#hooks\" aria-hidden=\"true\"></Link></h2>\n<p>Plugins work by hooking into various actions that <code>auto</code> has to do in order to facilitate a release or interact with your GitHub repo. The hooks that it exposes are:</p>\n<hr />\n<h3 id=\"main-hooks\">Main Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#main-hooks\" aria-hidden=\"true\"></Link></h3>\n<h4 id=\"beforerun\">beforeRun <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforerun\" aria-hidden=\"true\"></Link></h4>\n<p>Happens before anything is done. This is a great place to check for platform specific secrets such as a npm token.</p>\n<pre><code className=\"language-ts\">auto.hooks.beforeRun.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> config =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!process.env.NPM_TOKEN) &#123;<br />    auto.logger.log.warn(<span className=\"hljs-string\">'NPM Token is needed for the NPM plugin!'</span>);<br />  &#125;<br />&#125;);<br /></code></pre>\n<h4 id=\"modifyconfig\">modifyConfig <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#modifyconfig\" aria-hidden=\"true\"></Link></h4>\n<p>Modify what is in the config. You must return the config in this hook.</p>\n<pre><code className=\"language-ts\">auto.hooks.modifyConfig.tap(<span className=\"hljs-string\">'test'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">config</span> =&gt;</span> &#123;<br />  config.labels.released = &#123;<br />    name: <span className=\"hljs-string\">'released'</span>,<br />    description: <span className=\"hljs-string\">'This issue/pull request has been released'</span><br />  &#125;;<br /><br />  <span className=\"hljs-keyword\">return</span> config;<br />&#125;);<br /></code></pre>\n<h4 id=\"beforeshipit\">beforeShipIt <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforeshipit\" aria-hidden=\"true\"></Link></h4>\n<p>Happens before <code>shipit</code> is run. This is a great way to throw an error if a token or key is not present.</p>\n<pre><code className=\"language-ts\">auto.hooks.beforeRun.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> config =&gt; &#123;<br />  <span className=\"hljs-keyword\">if</span> (!process.env.NPM_TOKEN) &#123;<br />    <span className=\"hljs-keyword\">throw</span> <span className=\"hljs-keyword\">new</span> <span className=\"hljs-built_in\">Error</span>(<span className=\"hljs-string\">'NPM Token is needed for the NPM plugin!'</span>);<br />  &#125;<br />&#125;);<br /></code></pre>\n<h4 id=\"beforecommitchangelog\">beforeCommitChangelog <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#beforecommitchangelog\" aria-hidden=\"true\"></Link></h4>\n<p>Ran before the <code>changelog</code> command commits the new release notes to <code>CHANGELOG.md</code>.\nUseful for modifying the changelog as a whole or creating extra <code>changelog</code> files. These files can be apart of the commit that updates the changelog.</p>\n<ul>\n<li>bump - the semver bump</li>\n<li>commits - the commits in the changelog</li>\n<li>currentVersion - version that was just released</li>\n<li>lastRelease - the version before the current version</li>\n<li>releaseNotes - generated release notes for the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.beforeCommitChangelog.tap(<br />  <span className=\"hljs-string\">'MyPlugin'</span>,<br />  <span className=\"hljs-keyword\">async</span> (&#123; currentVersion, commits, releaseNotes, lastRelease &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<h4 id=\"afteraddtochangelog\">afterAddToChangelog <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afteraddtochangelog\" aria-hidden=\"true\"></Link></h4>\n<p>Ran after the <code>changelog</code> command adds the new release notes to <code>CHANGELOG.md</code>.\nUseful for getting extra commits into a release before publishing.</p>\n<ul>\n<li>bump - the semver bump</li>\n<li>commits - the commits in the changelog</li>\n<li>currentVersion - version that was just released</li>\n<li>lastRelease - the version before the current version</li>\n<li>releaseNotes - generated release notes for the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.afterAddToChangelog.tap(<br />  <span className=\"hljs-string\">'MyPlugin'</span>,<br />  <span className=\"hljs-keyword\">async</span> (&#123; currentVersion, commits, releaseNotes, lastRelease &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<h4 id=\"afterrelease\">afterRelease <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afterrelease\" aria-hidden=\"true\"></Link></h4>\n<p>Ran after the <code>release</code> command has run. This hooks gets the following arguments:</p>\n<ul>\n<li>version - version that was just released</li>\n<li>commits - the commits in the release</li>\n<li>releaseNotes - generated release notes for the release</li>\n<li>response - the response returned from making the release</li>\n</ul>\n<pre><code className=\"language-ts\">auto.hooks.afterRelease.tap(<br />  <span className=\"hljs-string\">'MyPlugin'</span>,<br />  <span className=\"hljs-keyword\">async</span> (&#123; version, commits, releaseNotes, response &#125;) =&gt; &#123;<br />    <span className=\"hljs-comment\">// do something</span><br />  &#125;<br />);<br /></code></pre>\n<h4 id=\"aftershipit\">afterShipIt <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#aftershipit\" aria-hidden=\"true\"></Link></h4>\n<p>Ran after the <code>shipit</code> command has run.</p>\n<h4 id=\"getauthor\">getAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getauthor\" aria-hidden=\"true\"></Link></h4>\n<p>Get git author. Typically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (author) &#123;<br />    <span className=\"hljs-keyword\">return</span> author;<br />  &#125;<br />&#125;);<br /></code></pre>\n<h4 id=\"getpreviousversion\">getPreviousVersion <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getpreviousversion\" aria-hidden=\"true\"></Link></h4>\n<p>Get the previous version. Typically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> prefixRelease =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />  <span className=\"hljs-keyword\">if</span> (version) &#123;<br />    <span className=\"hljs-keyword\">return</span> prefixRelease(<br />      <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>)).version<br />    );<br />  &#125;<br />&#125;);<br /></code></pre>\n<h4 id=\"getrepository\">getRepository <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#getrepository\" aria-hidden=\"true\"></Link></h4>\n<p>Get owner and repository. Typically from a package distribution description file.</p>\n<pre><code className=\"language-ts\">auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> owner = <span className=\"hljs-comment\">// get the owner from package.json</span><br />  <span className=\"hljs-keyword\">const</span> repo = <span className=\"hljs-comment\">// get the repo from package.json</span><br /><br />  <span className=\"hljs-keyword\">return</span> &#123;<br />    owner,<br />    repo<br />  &#125;<br />&#125;);<br /></code></pre>\n<h4 id=\"oncreaterelease\">onCreateRelease <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#oncreaterelease\" aria-hidden=\"true\"></Link></h4>\n<p>Tap into the things the Release class makes. This isn't the same as <code>auto release</code>, but the main class that does most of the work.</p>\n<p>Available hooks:</p>\n<ul>\n<li>onCreateLogParse (detailed <Link currentPage={(this && this.props || props).currentPage} to=\"\">below</Link>)</li>\n<li>onCreateChangelog (detailed <Link currentPage={(this && this.props || props).currentPage} to=\"\">below</Link>)</li>\n</ul>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">this</span>.hooks.onCreateRelease.tap(<span className=\"hljs-string\">'MyPlugin'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">release</span> =&gt;</span> &#123;<br />  release.hooks.onCreateLogParse.tap(<span className=\"hljs-string\">'Change log parseing'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">logParse</span> =&gt;</span><br />    <span className=\"hljs-comment\">// extend logParse</span><br />  );<br /><br />  release.hooks.onCreateChangelog.tap(<br />    <span className=\"hljs-string\">'Change changelog'</span>,<br />    <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span> &#123;<br />      <span className=\"hljs-comment\">// extend changelog</span><br />    &#125;<br />  );<br />&#125;);<br /></code></pre>\n<h4 id=\"oncreatechangelog\">onCreateChangelog <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#oncreatechangelog\" aria-hidden=\"true\"></Link></h4>\n<p>This is where you hook into the changelog's hooks. See usage <Link currentPage={(this && this.props || props).currentPage} to=\"#changelog-hooks\">below</Link>. This hook is exposed for convenience on during <code>this.hooks.onCreateRelease</code> and at the root <code>this.hooks</code></p>\n<h4 id=\"oncreatelogparse\">onCreateLogParse <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#oncreatelogparse\" aria-hidden=\"true\"></Link></h4>\n<p>This is where you hook into the LogParse's hooks. See usage <Link currentPage={(this && this.props || props).currentPage} to=\"#logparse-hooks\">below</Link>. This hook is exposed for convenience on during <code>this.hooks.onCreateRelease</code> and at the root <code>this.hooks</code></p>\n<h4 id=\"version\">version <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#version\" aria-hidden=\"true\"></Link></h4>\n<p>Version the package. This is a good opportunity to <code>git tag</code> the release also. Here <code>npm</code> does it for us.</p>\n<pre><code className=\"language-ts\">auto.hooks.version.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<br />    <span className=\"hljs-string\">'version'</span>,<br />    version,<br />    <span className=\"hljs-string\">'-m'</span>,<br />    <span className=\"hljs-string\">'Bump version to: %s [skip ci]'</span><br />  ]);<br />&#125;);<br /></code></pre>\n<h4 id=\"afterversion\">afterVersion <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afterversion\" aria-hidden=\"true\"></Link></h4>\n<p>Ran after the package has been versioned.</p>\n<h4 id=\"publish\">publish <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#publish\" aria-hidden=\"true\"></Link></h4>\n<p>Publish the package to some package distributor. You must push the tags to github!</p>\n<pre><code className=\"language-ts\">auto.hooks.publish.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<br />    <span className=\"hljs-string\">'version'</span>,<br />    version,<br />    <span className=\"hljs-string\">'-m'</span>,<br />    <span className=\"hljs-string\">'Bump version to: %s [skip ci]'</span><br />  ]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'publish'</span>]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'git'</span>, [<br />    <span className=\"hljs-string\">'push'</span>,<br />    <span className=\"hljs-string\">'--follow-tags'</span>,<br />    <span className=\"hljs-string\">'--set-upstream'</span>,<br />    <span className=\"hljs-string\">'origin'</span>,<br />    <span className=\"hljs-string\">'$branch'</span><br />  ]);<br />&#125;);<br /></code></pre>\n<h4 id=\"afterpublish\">afterPublish <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#afterpublish\" aria-hidden=\"true\"></Link></h4>\n<p>Ran after the package has been published.</p>\n<hr />\n<h4 id=\"canary\">canary <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#canary\" aria-hidden=\"true\"></Link></h4>\n<p>Used to publish a canary release. In this hook you get the semver bump and the unique canary postfix ID.</p>\n<pre><code className=\"language-ts\">auto.hooks.canary.tapPromise(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-keyword\">async</span> (version, postFix) =&gt; &#123;<br />  <span className=\"hljs-keyword\">const</span> lastRelease = <span className=\"hljs-keyword\">await</span> auto.git!.getLatestRelease();<br />  <span className=\"hljs-keyword\">const</span> current = <span className=\"hljs-keyword\">await</span> auto.getCurrentVersion(lastRelease);<br />  <span className=\"hljs-keyword\">const</span> nextVersion = inc(current, version <span className=\"hljs-keyword\">as</span> ReleaseType);<br />  <span className=\"hljs-keyword\">const</span> isScopedPackage = name.match(<span className=\"hljs-regexp\">/@\\S+\\/\\S+/</span>);<br />  <span className=\"hljs-keyword\">const</span> canaryVersion = &#96;$&#123;nextVersion&#125;-canary$&#123;postFix&#125;&#96;;<br /><br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'version'</span>, canaryVersion, <span className=\"hljs-string\">'--no-git-tag-version'</span>]);<br />  <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'publish'</span>, <span className=\"hljs-string\">'--tag'</span>, <span className=\"hljs-string\">'canary'</span>]);<br /><br />  auto.logger.verbose.info(<span className=\"hljs-string\">'Successfully published canary version'</span>);<br />  <span className=\"hljs-keyword\">return</span> canaryVersion;<br />&#125;);<br /></code></pre>\n<h3 id=\"changelog-hooks\">Changelog Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#changelog-hooks\" aria-hidden=\"true\"></Link></h3>\n<h4 id=\"addtobody\">addToBody <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#addtobody\" aria-hidden=\"true\"></Link></h4>\n<p>Add extra content to your changelogs.\nThis hook provide all the current &quot;extra&quot; notes and all of the commits for the changelog.\nYou must return the notes array.</p>\n<p>The following adds a random GIF from <Link currentPage={(this && this.props || props).currentPage} target=\"_blank\" to=\"https://giphy.com\" className=\"external-link\">giphy</Link> to each new changelog.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Giphy'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogLine.tapPromise(<br />    <span className=\"hljs-string\">'Giphy'</span>,<br />    <span className=\"hljs-keyword\">async</span> (notes, commits) =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> response = <span className=\"hljs-keyword\">await</span> fetch(&#96;https:<span className=\"hljs-comment\">//api.giphy.com/v1/gifs/random?api_key=$&#123;process.env.GIPHY_KEY&#125;&#96;);</span><br />      <span className=\"hljs-keyword\">const</span> json = <span className=\"hljs-keyword\">await</span> response.json();<br />      <span className=\"hljs-keyword\">const</span> &#123; data: gif &#125; = json;<br /><br />      <span className=\"hljs-keyword\">return</span> [...notes, &#96;![$&#123;gif.title&#125;]($&#123;gif.url&#125;)\\n&#96;]<br />    &#125;<br />  );<br />);<br /></code></pre>\n<h4 id=\"renderchangelogline\">renderChangelogLine <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogline\" aria-hidden=\"true\"></Link></h4>\n<p>Change how the changelog renders lines. This hook provides the commit and the current state of the line render. You must return the commit and the line string state as a tuple ([commit, line]).</p>\n<p>The following plugin would change all the bullet points in the changelog to star emojis.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogLine.tapPromise(<br />    <span className=\"hljs-string\">'Stars'</span>,<br />    <span className=\"hljs-keyword\">async</span> (commit, line) =&gt;<br />      [commit, &#96;$&#123;line.replace(<span className=\"hljs-string\">'-'</span>, <span className=\"hljs-string\">':star:'</span>)&#125;\\n&#96;]<br />  );<br />);<br /></code></pre>\n<h4 id=\"renderchangelogtitle\">renderChangelogTitle <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogtitle\" aria-hidden=\"true\"></Link></h4>\n<p>Change how the changelog renders titles. The hook provides the current label for the section and all the configured changelog titles.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogTitle.tap(<br />    <span className=\"hljs-string\">'My Titles'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">label, changelogTitles</span>) =&gt;</span> &#96;:heart: $&#123;changelogTitles[label]&#125; :heart:&#96;<br />  );<br />);<br /></code></pre>\n<h4 id=\"renderchangelogauthor\">renderChangelogAuthor <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogauthor\" aria-hidden=\"true\"></Link></h4>\n<p>Change how the changelog renders authors. This is both the author on each commit note and the user in the author section (the part between parentheses). This is generally a link to some profile.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogAuthor.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">author, commit</span>) =&gt;</span> &#96;:heart: $&#123;author.name&#125;/$&#123;commit.authorEmail&#125; :heart:&#96;<br />  );<br />);<br /></code></pre>\n<h4 id=\"renderchangelogauthorline\">renderChangelogAuthorLine <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#renderchangelogauthorline\" aria-hidden=\"true\"></Link></h4>\n<p>Change how the changelog renders authors in the authors section. The hook provides the author object and the user created with <code>renderChangelogAuthor</code>. Here is where you might display extra info about the author, such as their full name.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.renderChangelogAuthorLine.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">author, user</span>) =&gt;</span> &#96;:shipit: $&#123;author.name&#125; ($&#123;user&#125;)\\n&#96;<br />  );<br />);<br /></code></pre>\n<h4 id=\"createchangelogtitle\">createChangelogTitle <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#createchangelogtitle\" aria-hidden=\"true\"></Link></h4>\n<p>Control the titles in the <code>CHANGELOG.md</code></p>\n<pre><code className=\"language-ts\"><span className=\"hljs-comment\">// Render only the date in the title</span><br />auto.hooks.onCreateRelease.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\"><span className=\"hljs-params\">release</span> =&gt;</span> &#123;<br />  release.hooks.createChangelogTitle.tap(<br />    &#96;$&#123;<span className=\"hljs-keyword\">this</span>.name&#125; - lerna independent&#96;,<br />    <span className=\"hljs-function\"><span className=\"hljs-params\">()</span> =&gt;</span> <span className=\"hljs-string\">''</span><br />  );<br />&#125;);<br /></code></pre>\n<hr />\n<h4 id=\"omitreleasenotes\">omitReleaseNotes <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#omitreleasenotes\" aria-hidden=\"true\"></Link></h4>\n<p>Control what commits effect the additional release notes section.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateChangelog.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span> &#123;<br />  changelog.hooks.omitReleaseNotes.tap(<span className=\"hljs-keyword\">this</span>.name, <span className=\"hljs-function\"><span className=\"hljs-params\">commit</span> =&gt;</span><br />    commit.subject.includes(<span className=\"hljs-string\">'WIP'</span>)<br />  );<br />&#125;);<br /></code></pre>\n<hr />\n<h3 id=\"logparse-hooks\">LogParse Hooks <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#logparse-hooks\" aria-hidden=\"true\"></Link></h3>\n<h4 id=\"parsecommit\">parseCommit <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#parsecommit\" aria-hidden=\"true\"></Link></h4>\n<p>Parse information about a commit from a commit. Here is where <code>auto</code> gets the PR number from the merge commits.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateLogParse.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">logParse</span> =&gt;</span><br />  logParse.hooks.parseCommit.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">commit</span>) =&gt;</span> &#123;<br />      <span className=\"hljs-keyword\">const</span> bump = getBump(commit.subject, logParse.options.versionLabels);<br />      commit.labels = [bump]<br />      <span className=\"hljs-keyword\">return</span> commit;<br />    &#125;<br />  );<br />);<br /></code></pre>\n<h4 id=\"omitcommit\">omitCommit <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#omitcommit\" aria-hidden=\"true\"></Link></h4>\n<p>Choose to omit certain commits. If you return true the commit will be omitted. Be sure to return nothing if you don't want the commit omitted.</p>\n<pre><code className=\"language-ts\">auto.hooks.onCreateLogParse.tapPromise(<span className=\"hljs-string\">'Stars'</span>, <span className=\"hljs-function\"><span className=\"hljs-params\">changelog</span> =&gt;</span><br />  changelog.hooks.omitCommit.tap(<br />    <span className=\"hljs-string\">'test'</span>,<br />    <span className=\"hljs-function\">(<span className=\"hljs-params\">commit</span>) =&gt;</span> &#123;<br />      <span className=\"hljs-keyword\">if</span> (someTest(commit.subject)) &#123;<br />        <span className=\"hljs-keyword\">return</span> <span className=\"hljs-literal\">true</span>;<br />      &#125;<br />    &#125;<br />  );<br />);<br /></code></pre>\n<h2 id=\"example-plugin---npm-(simple)\">Example Plugin - NPM (simple) <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#example-plugin---npm-(simple)\" aria-hidden=\"true\"></Link></h2>\n<p>To create a plugin simply make a class with an <code>apply</code> method and tap into the hooks you need.</p>\n<pre><code className=\"language-ts\"><span className=\"hljs-keyword\">import</span> * <span className=\"hljs-keyword\">as</span> fs <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'fs'</span>;<br /><span className=\"hljs-keyword\">import</span> &#123; promisify &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'util'</span>;<br /><br /><span className=\"hljs-keyword\">import</span> &#123; IAutoHooks, Auto, SEMVER, execPromise &#125; <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'auto'</span>;<br /><span className=\"hljs-keyword\">import</span> getConfigFromPackageJson <span className=\"hljs-keyword\">from</span> <span className=\"hljs-string\">'./package-config'</span>;<br /><br /><span className=\"hljs-keyword\">const</span> readFile = promisify(fs.readFile);<br /><br /><span className=\"hljs-keyword\">export</span> <span className=\"hljs-keyword\">default</span> <span className=\"hljs-keyword\">class</span> NPMPlugin &#123;<br />  <span className=\"hljs-keyword\">public</span> apply(auto: Auto) &#123;<br />    auto.hooks.getAuthor.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; author &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />      <span className=\"hljs-keyword\">if</span> (author) &#123;<br />        auto.logger.log.info(<span className=\"hljs-string\">'NPM: Got author information from package.json'</span>);<br />        <span className=\"hljs-keyword\">return</span> author;<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getPreviousVersion.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> prefixRelease =&gt; &#123;<br />      <span className=\"hljs-keyword\">const</span> &#123; version &#125; = <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>));<br /><br />      auto.logger.log.info(<br />        <span className=\"hljs-string\">'NPM: Got previous version from package.json - '</span>,<br />        version<br />      );<br /><br />      <span className=\"hljs-keyword\">if</span> (version) &#123;<br />        <span className=\"hljs-keyword\">return</span> prefixRelease(<br />          <span className=\"hljs-built_in\">JSON</span>.parse(<span className=\"hljs-keyword\">await</span> readFile(<span className=\"hljs-string\">'package.json'</span>, <span className=\"hljs-string\">'utf-8'</span>)).version<br />        );<br />      &#125;<br />    &#125;);<br /><br />    auto.hooks.getRepository.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> () =&gt; &#123;<br />      auto.logger.log.info(<span className=\"hljs-string\">'NPM: getting repo information from package.json'</span>);<br />      <span className=\"hljs-keyword\">return</span> getConfigFromPackageJson();<br />    &#125;);<br /><br />    auto.hooks.publish.tapPromise(<span className=\"hljs-string\">'NPM'</span>, <span className=\"hljs-keyword\">async</span> (version: SEMVER) =&gt; &#123;<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<br />        <span className=\"hljs-string\">'version'</span>,<br />        version,<br />        <span className=\"hljs-string\">'-m'</span>,<br />        <span className=\"hljs-string\">'Bump version to: %s [skip ci]'</span><br />      ]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'npm'</span>, [<span className=\"hljs-string\">'publish'</span>]);<br />      <span className=\"hljs-keyword\">await</span> execPromise(<span className=\"hljs-string\">'git'</span>, [<br />        <span className=\"hljs-string\">'push'</span>,<br />        <span className=\"hljs-string\">'--follow-tags'</span>,<br />        <span className=\"hljs-string\">'--set-upstream'</span>,<br />        <span className=\"hljs-string\">'origin'</span>,<br />        <span className=\"hljs-string\">'$branch'</span><br />      ]);<br />    &#125;);<br />  &#125;<br />&#125;<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}